"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from configparser import RawConfigParser

# Build paths inside the project like this: BASE_DIR / 'subdir'.
# tip __file__ is a variable that contains the path to the module that is currently being imported.
#  指的是外层 mysite 所在的绝对地址
BASE_DIR = Path(__file__).resolve().parent.parent

# Read config from file
CONF = RawConfigParser()
CONF.read(BASE_DIR / 'etc/mysite.ini')

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = os.getenv('SECRET_KEY') or \
#              CONF['django'].get('secret_key') or \
#              'django-insecure-wh^@aj53w)^*w+pk1x%un7m)v68!w$_cox*q7nq7f&ze5vk-^8'
SECRET_KEY = 'django-insecure-wh^@aj53w)^*w+pk1x%un7m)v68!w$_cox*q7nq7f&ze5vk-^8'
# SECURITY WARNING: don't run with debug turned on in production!
_DEBUG = os.getenv('DJANGO_DEBUG') or \
         CONF['django'].get('debug') or \
         'false'
# debug 设置为 true
DEBUG = _DEBUG.lower() in ['true', 'on', '1']

_ALLOWED_HOSTS = os.getenv('ALLOWED_HOSTS') or \
                 CONF['django'].get('allowed_hosts') or \
                 '127.0.0.1, localhost'

ALLOWED_HOSTS = [i.strip() for i in _ALLOWED_HOSTS.split(',')]

APPEND_SLASH = False

# Application definition

# tip 执行 python manage.py migrate 会检查 INSTALLED_APPS 为其中每一个应用创建需要的表
#   比如添加了 polls.apps.PollsConfig
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    # 管理静态文件
    'django.contrib.staticfiles',

    'rest_framework',
    # 注册 drf_yasg，用于自动生成接口文档
    'drf_yasg',
    # tip 为了能够 unregister User 必须将自定义的 apps 写在 Django default apps 下面
    # https://stackoverflow.com/questions/2342031/remove-default-apps-from-django-admin
    # custom apps below
    'apps.snippets',
    'apps.polls',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # 自行配置的中间件们
    "whitenoise.middleware.WhiteNoiseMiddleware",
]

# Cache settings
# https://docs.djangoproject.com/en/3.2/topics/cache/
# redis-cli 进入到命令行
# select 2
# keys *
# 就可以看到已经存储下来的一些数据
# TIP 可以缓存动态页面这样不必每次请求计算，缓存分不同的粒度，可以使用 cache_page 缓存指定的视图
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://{host}:{port}/{db}'.format(
            host=os.getenv('CACHE_HOST') or CONF['cache'].get('host') or '127.0.0.1',
            port=os.getenv('CACHE_PORT') or CONF['cache'].get('port') or '6379',
            db=os.getenv('CACHE_DB') or CONF['cache'].get('db') or '2',
        ),
        'KEY_PREFIX': 'mysite-demo',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient'
        },
    },
}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        # tip 控制 API 的访问权限
        # 'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
        # 'rest_framework.permissions.DjangoModelPermissions'
        'rest_framework.permissions.AllowAny'
    ],
    # 配置分页相关内容
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 2,
    # 配置过滤相关内容
    'DEFAULT_FILTER_BACKENDS': (
        # 配置全局的过滤后端，如果在具体的 views 中没有设置 filter_backends
        # 默认使用的就是这个全局过滤后端
        'django_filters.rest_framework.DjangoFilterBackend',
        # 搜索，是基于 Django admin search 做的
        'rest_framework.filters.SearchFilter',
        'rest_framework.filters.OrderingFilter'
    ),
    # 配置频控相关内容
    'DEFAULT_THROTTLE_CLASSES': (
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle',
        'rest_framework.throttling.ScopedRateThrottle'
    ),
    'DEFAULT_THROTTLE_RATES': {
        'anon': '3600/hour',
        'user': '7200/hour',
        'snippet': '1/second',  # 测试用
    },
}

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # TIP 注意这里的根目录填写会影响使用到模板的视图文件中模板位置参数的变动
        'DIRS': [BASE_DIR / 'apps/polls/templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

# TIP deploy with wsgi
WSGI_APPLICATION = 'mysite.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

# tip 如果想使用别的数据库，需要安装合适的 db bindings，然后改变 default 的键值
#  Python 内置 SQLite，可以快速用来使用
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

STATIC_ROOT = BASE_DIR / 'static'
STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Swagger UI
# https://drf-yasg.readthedocs.io/en/stable/index.html

SWAGGER_SETTINGS = {
    'LOGIN_URL': '/admin/login/',
    'LOGOUT_URL': '/admin/logout/',
}

SWAGGER_BASE_URL = os.getenv('SWAGGER_BASE_URL') or CONF['swagger'].get('base_url') or None

SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
